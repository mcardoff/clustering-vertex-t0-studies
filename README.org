#+TITLE:Cone Clustering Vertex Timing
#+AUTHOR:Michael Cardiff
* Requirements
Running requires =root= and the proper ntuple files, the most current version is the following, available with =rucio= on lxplus:
#+begin_src bash
rucio-get user.mcardiff:user.mcardiff.mc21_14TeV.600026.PhH7EG_NNPDF3_AZNLO_VBFH125_ZZ4nu_MET75.SuperNtuple.e8481_s4290_r15583.20250728_try2_Output
#+end_src
This is a specific set of data extracted from a more comprehensive VBF Higgs to invisible sample, and contains all the necessary timing information. The full dataset is about 60 GB, if you can accomodate this on your machine, great, if not running on lxplus or even the UChicago server should be fine. If you cannot access =rucio= let me know, I can upload one of the samples to CERNBox
* Running
The script assumes you have the ntuple in the same directory, but in a folder called =ntuple=, if you want to store it elsewhere, change the path in this line in the code:
#+begin_example
setup_chain(chain, "./ntuple/");
#+end_example
Ensuring this is here, you can simply run the script in ROOT's batch mode:
#+begin_src bash
root -l -q -b clustering_dt.cxx
#+end_src
By Default the script will print out a progress reminder every 1000 events.
** Limiting time it takes
In general, it may take a while to run over all the events you are using, the full dataset I mentioned in the requirements has roughly 100K events, which may be a bit too much in some cases, if you want to limit this, I would simply add the following to the loop in =clustering_dt.cxx=
#+begin_src c++
  if (hgtdtimesMap[Score::TRKPTZ].get("pufrac").hist->Integral() > 10e3)
        break;
#+end_src
Essentially, if there are more than 10K events which pass the basic event-level cuts, this will exit the loop and immediately begin the plotting.

If this is still too slow for your taste, let me know and I can help you set it up as a compiled CMake project as opposed to a root script
* The Output
There will be several PDF files as the output, here is a table summarizing the relevant ones:
| file                         | description                                                                                                       |
|------------------------------+-------------------------------------------------------------------------------------------------------------------|
| hgtd_trkptz_*variable*.pdf   | Several plots, summarizing the calculated efficiency and resolution                                               |
| hgtdtimes_resos_*yscale*.pdf | Inclusive (all used events) plots showing the resolution                                                          |
|------------------------------+-------------------------------------------------------------------------------------------------------------------|
The Variables Which we are looking at:
| variable in file name | full name                     | description                                         |
|-----------------------+-------------------------------+-----------------------------------------------------|
| nfjet                 | N Forward Jets                | Number of forward jets in the event                 |
| ntrack                | N Forward Tracks              | Number of forward tracks in the event               |
| nhstrack              | N Forward Hard Scatter Tracks | Number of forward Hard Scatter tracks in the event  |
| nputrack              | N Forward Pile Up Tracks      | Number of forward Pile Up tracks in the event       |
| pufrac                | Pile Up Fraction              | Ratio of Number of PU Tracks to All Tracks in event |
|-----------------------+-------------------------------+-----------------------------------------------------|
The variables with the most information tend to be =nhstrack= and =pufrac=
Feel free to email me (mcardiff@brandeis.edu) if something breaks
